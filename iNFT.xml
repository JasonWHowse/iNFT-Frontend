<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iNFT</name>
    </assembly>
    <members>
        <member name="T:iNFT.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:iNFT.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:iNFT.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:iNFT.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:iNFT.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:iNFT.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:iNFT.src.Ethereum_Interact">
            <summary>
            Class to interact with the nft Contract
            </summary>
        </member>
        <member name="F:iNFT.src.Ethereum_Interact.envChainID">
            <summary>
            Current Environment Network ID/Chain ID
            </summary>
        </member>
        <member name="F:iNFT.src.Ethereum_Interact.chain">
            <summary>
            Which Environment is being used
            </summary>
        </member>
        <member name="T:iNFT.src.Ethereum_Interact.Crypto">
            <summary>
            Enum to choose which account is being used
            </summary>
        </member>
        <member name="F:iNFT.src.Ethereum_Interact.Crypto.Local">
            <summary>
            Local account 
            </summary>
        </member>
        <member name="F:iNFT.src.Ethereum_Interact.Crypto.Ropsten">
            <summary>
            Test account 
            </summary>
        </member>
        <member name="F:iNFT.src.Ethereum_Interact.Crypto.Ethereum_Mainnet">
            <summary>
            Production account 
            </summary>
        </member>
        <member name="P:iNFT.src.Ethereum_Interact.EnvContractAccount">
            <summary>
            Account address associated with the contract
            </summary>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.#ctor">
            <summary>
            Initializes the web3 contracts for each environment
            
            Requirements D7.3.1, D7.3.2, D7.3.3
            </summary>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.#ctor(iNFT.src.Ethereum_Interact.Crypto)">
            <summary>
            Constructor that sets the environment variables
            
            Requirement D1.2.2, D1.2.3, D1.2.4
            </summary>
            <param name="env"></param>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.CheckAccountByIndex(System.Int32)">
            <summary>
            Returns a boolean based on whether or not the Address has a Token at a particular index
            
            Requirements D7.3.4
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.Mint(System.String)">
            <summary>
            Attempts to post a token to the block chain network and returns true if its successful
            
            Requirements D7.1.2, D7.3.5
            </summary>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.CheckUserName(System.String)">
            <summary>
            Sets the current environment and address to the appropriate private key
            return the account balance associated with the account
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.GetAccountBalance(System.String)">
            <summary>
            Returns address account
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.TokenList">
            <summary>
            Returns all tokens associated with a particular account
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.AccountIsNull">
            <summary>
            return bool if the Account variable is null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.GetContract">
            <summary>
            Gets the Contract detail
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.Logout">
            <summary>
            Logs user out by destroying environments
            
            Requirements D6.1.0, D6.2.0, D6.3.0
            </summary>
        </member>
        <member name="M:iNFT.src.Ethereum_Interact.SetEnvironment(iNFT.src.Ethereum_Interact.Crypto)">
            <summary>
            Sets the environment variables based on locat, Ropsten, Main_Net
            
            Requirement D1.2.6
            </summary>
            <param name="env"></param>
        </member>
        <member name="T:iNFT.src.Controller.IPFS_Interact">
            <summary>
            Class to post and get items from the ipfs network
            </summary>
        </member>
        <member name="F:iNFT.src.Controller.IPFS_Interact.Image_File_Types">
            <summary>
            Approved Image file types
            
            Requirement D3.2.1
            </summary>
        </member>
        <member name="F:iNFT.src.Controller.IPFS_Interact.Text_File_Types">
            <summary>
            Approved Raw Text file types
            
            Requirement D3.3.1
            </summary>
        </member>
        <member name="P:iNFT.src.Controller.IPFS_Interact.Ext">
            <summary>
            The files extentsion as determined by mime
            </summary>
        </member>
        <member name="P:iNFT.src.Controller.IPFS_Interact.FileName">
            <summary>
            FileName used to store the IPFS file locally
            </summary>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.#ctor">
            <summary>
            Basic Contructor
            </summary>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.#ctor(System.String)">
            <summary>
            Constructor to set gateway
            </summary>
            <param name="gateway"></param>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.#ctor(System.String,System.String)">
            <summary>
            Constructor to set gateway and storepath
            </summary>
            <param name="gateway"></param>
            <param name="storePath"></param>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor to set gateway, storepath, and storeFileName
            </summary>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.DeleteFile">
            <summary>
            Deletes all local storage files
            
            Requirements D7.5.4
            </summary>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.GetIPFSFile(System.String)">
            <summary>
            Gets an IPFS file and stores it locally
            
            Requirements D4.1.0, D4.1.1, D4.1.2, D7.5.1, D7.5.2
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.SetFileToIPFS(System.String)">
            <summary>
            Posts a file to IPFS
            
            Requirements D7.5.3
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Controller.IPFS_Interact.GetTypeByPathFromByteCode(System.String)">
            <summary>
            Gets the Extension determined by the bytecode of the file
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:iNFT.src.Model.Contract_Details">
            <summary>
            Class for storeing hardcoded ABIs and Bytecode
            </summary>
        </member>
        <member name="F:iNFT.src.Model.Contract_Details.NFT_ByteCode">
            <summary>
            ByteCode for NFT contract
            </summary>
        </member>
        <member name="F:iNFT.src.Model.Contract_Details.NFT_ABI">
            <summary>
            ABI for NFT contract
            </summary>
        </member>
        <member name="F:iNFT.src.Model.Contract_Details.iNFT_ByteCode">
            <summary>
            byte code for iNFT interface
            </summary>
        </member>
        <member name="F:iNFT.src.Model.Contract_Details.iNFT_ABI">
            <summary>
            ABI for iNFT interface
            </summary>
        </member>
        <member name="T:iNFT.src.Utilities.Deploy_Contract">
            <summary>
            Class to deploy contracts from abis and bytecode
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Deploy_Contract.GetProjectPath">
            <summary>
            Gets the primary project path
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Utilities.Deploy_Contract.Contract_Preparation">
            <summary>
            deploys a smart contract, a lot of variables need to be configured manually before using
            </summary>
        </member>
        <member name="T:iNFT.src.Utilities.Helpers">
            <summary>
            Helper functions to help accomplish different goals
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Helpers.GetJsonObject(System.String)">
            <summary>
            Attemps to get a manipulatable JObject from a json file, full path accepted
            
            Requirement D7.4.1
            </summary>
            <param name="fileNamepath"></param>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Utilities.Helpers.GetJsonObject(System.String,System.String)">
            <summary>
            API for filename and path
            </summary>
            <param name="fileName"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:iNFT.src.Utilities.Log">
             <summary>
            Creates a log file that is usable from anywhere in the program. 
            Only 1 logfile is useable at a time.  Use a StartLogger method
            to use a change the log file used.
             </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Log.BeginningOfLog">
            <summary>
            Sets the beginning of a log Set or can be used to mark a new log 
            set area
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Log.InfoLog(System.Object)">
            <summary>
            Generates Info log entry on the log file.
            
            Requirements D7.1.0
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.InfoLog(System.String)">
            <summary>
            Generates Info log entry on the log file.
            
            Requirements D7.1.0
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.WarningLog(System.Object)">
            <summary>
            Generates Warning log entry on the log file.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.WarningLog(System.String)">
            <summary>
            Generates Warning log entry on the log file.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.ErrorLog(System.Exception)">
            <summary>
            Generates Error log entry on the log file.
            
            Requirements D7.2.0, D7.3.0, D7.4.0, D7.5.0
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.ErrorLog(System.Object)">
            <summary>
            Generates Error log entry on the log file.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.ErrorLog(System.String)">
            <summary>
            Generates Error log entry on the log file.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.ClearLog">
            <summary>
            Deletes all text from the current log file.
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Log.GetFileName">
            <summary>
            Gets the file path and name of the current log file
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Utilities.Log.GetLog">
            <summary>
            Gets all text as a string of the current log file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Utilities.Log.LogMessage(System.String,System.String)">
            <summary>
            Writes to file from one of the log messages
            </summary>
            <param name="type"></param>
            <param name="message"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.StartLogger">
            <summary>
            Default path/filename file starter
            
            Requirements D7.0.0
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Log.StartLogger(System.String)">
            <summary>
            sets custom path but default filename
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.StartLogger(System.String,System.String)">
            <summary>
            sets custom filename and path
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Log.Toggle_Errors">
            <summary>
            Turns off error messages
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Utilities.Log.Toggle_Warnings">
            <summary>
            Turns off warning message
            </summary>
            <returns></returns>
        </member>
        <member name="T:iNFT.src.Utilities.Toaster">
             <summary>
            Highly modifiable class for generating toast messages
            allows for multiple objects and complete customization
            of the toast object
             </summary>
        </member>
        <member name="T:iNFT.src.Utilities.Toaster.ToastColors">
            <summary>
            Enum for selecting message type 3 different presets
            </summary>
        </member>
        <member name="F:iNFT.src.Utilities.Toaster.ToastColors.PRIMARY">
            <summary>
            Primary
            Primary
            </summary>
        </member>
        <member name="F:iNFT.src.Utilities.Toaster.ToastColors.WARNING">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:iNFT.src.Utilities.Toaster.ToastColors.ERROR">
            <summary>
            Error
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.#ctor">
             <summary>
             Constructor to instatiate a new reuseable toaster message
            multiple Toaster objects can be instantiated as the same time
            but on each individual instance of the message is only usable 
            one at a time, a second object can be used at the same time as
            the first
             </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.FlipTextBlockFontBold">
            <summary>
            Toggle Method to change font to Bold
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.FlipTextBlockFontItalics">
            <summary>
            Toggle Method to change font to Italics
            </summary>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.GetToast">
            <summary>
            Gets the border object for the toast object
            </summary>
            <returns></returns>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.PopToastie(System.String,iNFT.src.Utilities.Toaster.ToastColors,System.Int32)">
            <summary>
            Instantiates the current toast object in the project
            </summary>
            <param name="message"></param>
            <param name="tc"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderCornerRadius(System.Windows.CornerRadius)">
            <summary>
            Sets Toast border radius
            </summary>
            <param name="borderCornerRadius"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderHeight(System.Int32)">
            <summary>
            Sets Toast message height
            </summary>
            <param name="borderHeight"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderHorizontalAlignment(System.Windows.HorizontalAlignment)">
            <summary>
            Sets left, right, or center horizontal alignment
            </summary>
            <param name="borderHorizontalAlignment"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderMargin(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets Border margin
            </summary>
            <param name="borderLeftMargin"></param>
            <param name="borderTopMargin"></param>
            <param name="borderRightMargin"></param>
            <param name="borderBottomMargin"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderThickness(System.Windows.Thickness)">
            <summary>
            Sets Border thickeness
            </summary>
            <param name="borderThickness"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderVerticalAlignment(System.Windows.VerticalAlignment)">
            <summary>
            Sets up, down, or center vertical alignment
            </summary>
            <param name="borderVerticalAlignment"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderWidth(System.Int32)">
            <summary>
            Sets border width
            </summary>
            <param name="borderWidth"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetBorderXName(System.String)">
            <summary>
            Sets the name of the Toast object for easier manipulation
            </summary>
            <param name="boarderXName"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetErrorColors(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Sets error colors
            </summary>
            <param name="backgroundColor"></param>
            <param name="boarderColor"></param>
            <param name="fontColor"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetPrimaryColors(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Set primary colors
            </summary>
            <param name="backgroundColor"></param>
            <param name="boarderColor"></param>
            <param name="fontColor"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockFontFamily(System.String)">
            <summary>
            Sets font type of the toast message
            </summary>
            <param name="textBlockFontFamily"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockFontSize(System.Double)">
            <summary>
            Sets the font size
            </summary>
            <param name="textBlockFontSize"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockMargin(System.Windows.Thickness)">
            <summary>
            Sets the Margin of the toast message
            </summary>
            <param name="margin"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockMargin(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the Margin of the toast message with full control of each margin
            </summary>
            <param name="leftMargin"></param>
            <param name="topMargin"></param>
            <param name="rightMargin"></param>
            <param name="bottomMargin"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockTextAlignment(System.Windows.TextAlignment)">
            <summary>
            Sets the alignment of the text in the message
            </summary>
            <param name="textBlockTextAlignment"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockTextWrapping(System.Windows.TextWrapping)">
            <summary>
            Sets word wrap of the toast message
            </summary>
            <param name="TextWrapping"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockVerticalAlignment(System.Windows.VerticalAlignment)">
            <summary>
            Sets the text alignment of the toast message vertically
            </summary>
            <param name="textBlockVerticalAlignment"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetTextBlockXName(System.String)">
            <summary>
            Sets the name of the internal text block for easier manipulation
            </summary>
            <param name="textBlockXName"></param>
        </member>
        <member name="M:iNFT.src.Utilities.Toaster.SetWarningColors(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Sets the warning colors of the toast message
            </summary>
            <param name="backgroundColor"></param>
            <param name="boarderColor"></param>
            <param name="fontColor"></param>
        </member>
        <member name="T:iNFT.src.View.MainWindow">
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.#ctor">
            <summary>
            MainWindow
            
            Requirements D7.0.0
            </summary>
        </member>
        <member name="F:iNFT.src.View.MainWindow.userBalance">
            <summary>
            Requirement D1.0.0
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.CheckLogin">
            <summary>
            Requirements D7.2.2
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.EnvironmentChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Requirement D1.2.0, D1.2.1
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.InitializeLogonWindow">
            <summary>
            Requirement D1.1.0, D1.1.1, D1.1.2, D6.4.0
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.Login_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Requirement D1.2.5, D1.3.0, D1.3.1, D1.3.2, D1.3.3, D1.4.0, D1.4.1, D1.4.2, D1.4.3, D1.4.4, D7.2.1
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.InitializeTransferWindow">
            <summary>
            D5.0.0
            </summary>
        </member>
        <member name="F:iNFT.src.View.MainWindow.IPFS">
            <summary>
            Requirements D2.0.0, D3.0.0, D4.0.0, D6.0.0
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.Mint">
            <summary>
            Requirements D7.2.7
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.PostFileToIPFS">
            <summary>
            Requirements D3.4.2, D7.2.6
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.SetFileName">
            <summary>
            Requirements D7.2.5
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.BrowseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Requirements D3.1.0, D3.1.2
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.DisplayImage">
            <summary>
            Requirements D3.1.2, D3.2.0, D3.2.1, D4.2.0, D4.2.1, D7.2.3
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.DisplayText">
            <summary>
            Requirements D3.1.2, D3.3.0, D3.3.1, D4.3.0, D4.3.1, D7.2.4
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.FileNameTextBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Requirements D3.1.0, D3.1.1, D3.1.2
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.InitializeMainWindow">
            <summary>
            Requirements D2.1.0, D2.1.1, D2.1.2, D2.2.0
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.Logout_Button_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Requirements D6.0.0
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.Mint_Button_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Requirements D3.4.0, D3.4.1, D3.4.2, D3.4.3, D3.4.4, D3.4.5, D3.4.6, D7.1.1
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.NFTComboBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Requirements D4.0.0, D4.1.0, D4.4.0
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.SetNFTComboBox">
            <summary>
            Requirements D2.2.0, D3.4.7
            </summary>
        </member>
        <member name="M:iNFT.src.View.MainWindow.Copy_to_Clipboard_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Requirements D4.5.0
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:iNFT.src.View.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
